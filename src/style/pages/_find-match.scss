@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;

#find-match {
  @include m.flex(center, center, column);
  @include m.media-query(mobile-find-match) {
    justify-content: flex-start;
  }
  .card-wrapper {
    position: relative;
    height: 80vh; // Fallback
    height: 80svh;
    width: 53.4rem;
    @include m.media-query(mobile-find-match) {
      width: 100vw;
    }
    .card {
      position: absolute;
      width: 53.4rem;
      height: 80vh; // Fallback
      height: 80svh;
      border-radius: 2rem;
      overflow: hidden;
      z-index: 6;
      will-change: transform;
      &.behind {
        position: absolute;
        top: 0;
        z-index: -2;
      }
      &.being-removed {
        z-index: 7;
      }
      @include m.media-query(mobile-find-match) {
        width: 100vw;
      }
      .img-wrapper {
        @include m.flex(center, center, column);
        position: relative;
        height: 100%;
      }
      .like-icon,
      .dislike-icon {
        position: absolute;
        top: 5rem;
        opacity: 0;
      }
      .like-icon {
        left: 5rem;
      }
      .dislike-icon {
        right: 5rem;
      }
      @include m.media-query(mobile-find-match) {
        .like-icon,
        .dislike-icon {
          top: 3rem;
        }
        .like-icon {
          left: 3rem;
        }
        .dislike-icon {
          right: 3rem;
        }
      }
      .dog-img {
        position: relative;
        // The image is not fitting its container properly and shows white and black stripes around the edges when width and height are set to 100%.
        width: 99.85%;
        height: 99.85%;
        object-fit: cover;
        z-index: -1;
        user-select: none;
        border-radius: 2rem;
        @include m.media-query(mobile-find-match) {
          width: 99.6%;
          height: 99.6%;
        }
      }
      .dog-name-and-group {
        position: absolute;
        bottom: 1rem;
        margin: 0 1rem 3rem 2rem;
        @include m.media-query(mobile-find-match) {
          margin-bottom: 7rem;
        }
      }
      .dog-name-and-group h2,
      .dog-name-and-group h3 {
        user-select: none;
      }
    }
    .bio {
      @include m.flex(normal, center, column);
      gap: 3rem;
      width: 100%;
      padding-top: 3rem;
      padding-bottom: 3rem;
      display: none;
      overflow: hidden;
      @include m.media-query(mobile-find-match) {
        padding-top: 0;
      }
    }
    .bio article {
      position: relative;
      margin: 0 2rem;
      padding: 1rem;
      border-radius: 1rem;
    }
    .bio article:nth-child(1) {
      animation: 0.6s ease 0.1s forwards bio-out-animation;
      .content {
        animation: 0.3s ease 0.1s forwards bio-content-out-animation;
      }
    }
    .bio article:nth-child(2) {
      animation: 0.6s ease forwards bio-out-animation;
      .content {
        animation: 0.3s ease 0s forwards bio-content-out-animation;
      }
    }
    .bio article:nth-child(1).bio-in-animation {
      animation: 0.5s ease forwards bio-in-animation;
      .content {
        animation: 1.3s ease 0s forwards bio-content-in-animation;
      }
    }
    .bio article:nth-child(2).bio-in-animation {
      transform: translateX(-110%);
      animation: 0.5s ease 0.1s forwards bio-in-animation;
      .content {
        animation: 1.3s ease 0.1s forwards bio-content-in-animation;
      }
    }
    .title {
      @include m.flex(center, normal, row);
    }
    .title h3 {
      margin-left: 1rem;
    }
    .attribute {
      @include m.flex(center, normal, row);
      margin: 1rem 0;
    }
    .attribute p {
      margin-left: 1rem;
    }
    .divider {
      display: block;
      width: 100%;
      margin: auto;
      height: 0.1rem;
    }
    .like-dislike-panel {
      @include m.flex(center, center, row);
      gap: 2rem;
      position: absolute;
      padding-bottom: 1rem;
      bottom: 0;
      left: 50%;
      transform: translate(-50%, 40%);
      z-index: 8;
      @include m.media-query(mobile-find-match) {
        transform: translate(-50%, -4%);
      }
      button {
        width: 6rem;
        height: 6rem;
        border: none;
        border-radius: 50%;
        position: relative;
        cursor: pointer;
        transition: transform 0.1s ease;
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
      }
      button.toggle-bio,
      button.toggle-settings {
        width: 4rem;
        height: 4rem;
      }
      button:hover {
        transform: scale(1.05);
      }
      .dislike {
        background-color: #ececec;
        animation: 0.3s ease forwards like-dislike-panel-scale-up-animation;
        &.scale-down {
          animation: 0.3s ease forwards like-dislike-panel-scale-down-animation;
        }
      }
      .like {
        background-color: #ffebe6;
        animation: 0.3s ease forwards like-dislike-panel-scale-up-animation;
        &.scale-down {
          animation: 0.3s ease forwards like-dislike-panel-scale-down-animation;
        }
      }
      .toggle-bio {
        background-color: #f2e9f7;
        animation: 0.3s ease forwards like-dislike-panel-scale-up-animation;
        &.scale-down {
          animation: 0.3s ease forwards like-dislike-panel-scale-down-animation;
        }
      }
      .toggle-settings {
        background-color: #fdfde2;
        animation: 0.3s ease forwards like-dislike-panel-scale-up-animation;
        &.scale-down {
          animation: 0.3s ease forwards like-dislike-panel-scale-down-animation;
        }
      }
      img {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
    .filters-wrapper {
      position: absolute;
      overflow-y: hidden;
      scrollbar-width: none;
      width: 100%;
      height: 100%;
      top: 0;
      border-radius: 2rem;
      @include m.media-query(mobile-find-match) {
        border-radius: 0;
      }
      &.show {
        overflow-y: auto;
        -webkit-overflow-scrolling: touch; // Enable proper scrolling on iOS
        z-index: 7;
      }
      .filters {
        position: absolute;
        background-color: v.$dark-color;
        color: white;
        z-index: 7;
        transform: translateX(-100%);
        transition: transform 0.3s ease;
        opacity: 0;
      }
      .filters.show {
        transform: translateX(0);
      }
      .breed-groups-container {
        padding: 3rem;
        padding-bottom: 0;
      }
      li {
        list-style-type: none;
        margin: 2rem 0;
      }
      // I got the checkbox styling from: https://getcssscan.com/css-checkboxes-examples?ref=beautifulboxshadow-bottom
      // But I modified it a bit to make it fit with my webapp.
      .input-box input[type="checkbox"] {
        visibility: hidden;
        display: none;
      }

      .input-box {
        position: relative;
        cursor: pointer;
        user-select: none;
        height: 7rem;
      }

      .input-box *,
      .input-box ::after,
      .input-box ::before {
        box-sizing: border-box;
        display: inline-block;
      }

      .container {
        @include m.flex(center, space-between, row);
        position: relative;
        width: 100%;
        height: 100%;
        padding: 0 2rem;
        cursor: pointer;
        user-select: none;
        border: 0.2rem solid #3c444f;
        border-radius: 0.8rem;
        @include m.media-query(mobile-find-match) {
          padding-right: 6rem;
          padding-left: 1rem;
        }
      }
      .container.selected {
        border: 0.2rem solid #ff4458;
      }

      /* Create a custom checkbox */
      .input-box .checkmark {
        position: absolute;
        font-size: 2.5rem;
        top: 50%;
        right: 2rem;
        transform: translateY(-50%);
        height: 1.3em;
        width: 1.3em;
        border-radius: 50px;
        transition: all 0.7s;
        --spread: 2rem;
        pointer-events: none;
        @include m.media-query(mobile-find-match) {
          font-size: 2rem;
        }
      }

      /* When the checkbox is checked, add a blue background */
      .input-box .container input:checked ~ .checkmark {
        box-shadow: -10px -10px var(--spread) 0px #5b51d8,
          0 -10px var(--spread) 0px #833ab4,
          10px -10px var(--spread) 0px #e1306c, 10px 0 var(--spread) 0px #fd1d1d,
          10px 10px var(--spread) 0px #f77737, 0 10px var(--spread) 0px #fcaf45,
          -10px 10px var(--spread) 0px #ffdc80;
      }

      /* Create the checkmark/indicator (hidden when not checked) */
      .input-box .checkmark::after {
        content: "";
        position: absolute;
        display: none;
      }

      /* Show the checkmark when checked */
      .input-box .container input:checked ~ .checkmark::after {
        display: block;
      }

      /* Style the checkmark/indicator */
      .input-box .container .checkmark::after {
        left: 0.5em;
        top: 0.34em;
        width: 0.25em;
        height: 0.5em;
        border: solid #f0f0f0;
        border-width: 0 0.15em 0.15em 0;
        transform: rotate(45deg);
      }

      .hide-behind-panel {
        position: sticky;
        width: 100%;
        height: 5rem;
        bottom: 0;
        left: 0;
        background-color: v.$dark-color;
        @include m.media-query(mobile-find-match) {
          height: 8rem;
        }
      }
    }
  }
}

@keyframes toggle-bio-button-open-animation {
  from {
    transform: translate(-50%, -50%) rotate(0);
  }
  to {
    transform: translate(-50%, -50%) rotate(180deg);
  }
}

@keyframes toggle-bio-button-close-animation {
  from {
    transform: translate(-50%, -50%) rotate(180deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(0);
  }
}

@keyframes bio-in-animation {
  from {
    transform: translateX(-110%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes bio-out-animation {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-110%);
  }
}

@keyframes bio-content-in-animation {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes bio-content-out-animation {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes like-dislike-panel-scale-down-animation {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0);
  }
}

@keyframes like-dislike-panel-scale-up-animation {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}
